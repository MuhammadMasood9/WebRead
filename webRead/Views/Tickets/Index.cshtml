@model IEnumerable<webRead.Models.Ticket>
@{
    ViewData["Title"] = "Manage Tickets";
}

<div class="container mt-5">
    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h3 class="m-0">@ViewData["Title"]</h3>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover table-sm" id="ticketTable">
                    <thead class="table-dark">
                        <tr>
                            <th>ID</th>
                            <th>Program</th>
                            <th>Project</th>
                            <th>Subject</th>
                            <th>Description</th>
                            <th>Image</th>
                            <th>Created At</th>
                            <th>Others</th>
                            <th>User ID</th>
                            <th>Total Amount</th>
                            <th>Payment Type</th>
                            <th>Donation Type</th>
                            <th>Order Number</th>
                            <th>CPay ID</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Any())
                        {
                            @foreach (var ticket in Model)
                            {
                                <tr>
                                    <td class="align-middle">@ticket.Id</td>
                                    <td class="align-middle">@ticket.Program</td>
                                    <td class="align-middle">@ticket.Project</td>
                                    <td class="align-middle">@ticket.Subject</td>
                                    <td class="align-middle">
                                        @if (!string.IsNullOrEmpty(ticket.Description))
                                        {
                                            @(ticket.Description.Length > 50 ? ticket.Description.Substring(0, 50) + "..." : ticket.Description)
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">N/A</span>
                                        }
                                    </td>
                                    <td class="align-middle">
                                        @if (!string.IsNullOrEmpty(ticket.ImagePath))
                                        {
                                            <img src="data:image/jpeg;base64,@ticket.ImagePath" alt="Ticket Image" class="img-thumbnail" style="max-height: 50px;" />
                                            <button class="btn btn-link btn-sm p-0"
                                                    onclick="showFullImage('@ticket.Subject', 'data:image/jpeg;base64,@ticket.ImagePath')">
                                                View Full
                                            </button>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">No Image</span>
                                        }
                                    </td>
                                    <td class="align-middle">@ticket.CreatedAt.ToString("MM/dd/yyyy HH:mm")</td>
                                    <td class="align-middle">
                                        @if (!string.IsNullOrEmpty(ticket.Others))
                                        {
                                            @(ticket.Others.Length > 50 ? ticket.Others.Substring(0, 50) + "..." : ticket.Others)
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">N/A</span>
                                        }
                                    </td>
                                    <td class="align-middle">@ticket.Crossponding_id</td>
                                    <td class="align-middle">@ticket.TotalAmount</td>
                                    <td class="align-middle">@ticket.PaymentType</td>
                                    <td class="align-middle">@ticket.DontaionType</td>
                                    <td class="align-middle">@ticket.OrderNumber</td>
                                    <td class="align-middle">@ticket.CurrentCpayId</td>
                                    <td class="align-middle">
                                        @switch (ticket.Status)
                                        {
                                            case 0:
                                                <span class="badge bg-warning text-dark">UnPaid</span>
                                                break;
                                            case 1:
                                                <span class="badge bg-success">Paid</span>
                                                break;
                                            case 2:
                                                <span class="badge bg-danger">Rejected</span>
                                                break;
                                            default:
                                                <span class="badge bg-secondary">Unknown</span>
                                                break;
                                        }
                                    </td>
                                    <td class="align-middle">
                                        <form method="post" asp-action="EditStatus" asp-route-id="@ticket.Id" class="d-flex gap-2" onsubmit="console.log('Submitting status for ticket ' + @ticket.Id + ' to ' + this.querySelector('button[type=submit]:focus').value)">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" name="status" value="0" class="btn btn-warning btn-sm"
                                                    title="Mark as UnPaid" @(ticket.Status == 0 ? "disabled" : "")>
                                                <i class="fas fa-clock"></i>
                                            </button>
                                            <button type="submit" name="status" value="1" class="btn btn-success btn-sm"
                                                    title="Mark as Paid" @(ticket.Status == 1 ? "disabled" : "")>
                                                <i class="fas fa-check-circle"></i>
                                            </button>
                                            <button type="submit" name="status" value="2" class="btn btn-danger btn-sm"
                                                    title="Mark as Rejected" @(ticket.Status == 2 ? "disabled" : "")>
                                                <i class="fas fa-times-circle"></i>
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="16" class="text-center py-4">
                                    <div class="alert alert-info mb-0">
                                        <i class="fas fa-info-circle me-2"></i> No tickets found
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="card-footer text-muted">
            <small>Total tickets: @Model.Count()</small>
        </div>
    </div>
</div>

@section Scripts {
    <script>

                  $(function () {
            $('[data-bs-toggle="tooltip"]').tooltip();

            // Initialize DataTables (if you have it included)
            if ($.fn.DataTable) {
                $('#ticketTable').DataTable({
                    "responsive": true,
                    "lengthChange": true,
                    "autoWidth": false,
                    "pageLength": 10
                });
            }
        });
        function showFullImage(subject, imageSrc) {
            Swal.fire({
                title: subject,
                html: `<img src="${imageSrc}" alt="${subject}" style="max-width: 100%;" />`,
                icon: 'info',
                confirmButtonColor: '#3085d6'
            });
        }

        @if (TempData["SwalSuccess"] != null)
        {
            <text>
                    Swal.fire({
                        title: 'Success!',
                        text: '@TempData["SwalSuccess"]',
                        icon: 'success',
                        confirmButtonColor: '#3085d6'
                    });
            </text>
        }
        @if (TempData["SwalError"] != null)
        {
            <text>
                    Swal.fire({
                        title: 'Error!',
                        text: '@TempData["SwalError"]',
                        icon: 'error',
                        confirmButtonColor: '#d33'
                    });
            </text>
        }
    </script>
}